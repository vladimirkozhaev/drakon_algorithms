// Autogenerated with DRAKON Editor 1.22
org.casualintellect.statemachine

public class TransformToPolishNotation {

    void RPNTransform(List<String> symbols) {
        Iterator<String> _it40 = null;
        String symbol = null;
        int _sw160000_ = 0;
        // item 400001
        _it40 = symbols.iterator();
        while (true) {
            // item 400002
            if (_it40.hasNext()) {
                
            } else {
                break;
            }
            // item 400004
            symbol = _it40.next();
            // item 160000
            _sw160000_ = symbol type;
            // item 160001
            if (_sw160000_ == number) {
                // item 23
                inputStr+=symbol
            } else {
                // item 160002
                if (_sw160000_ == operator) {
                    while (true) {
                        // item 42
                        if (stack not empty
and 
priority(symbol)
 <priority(stack.head)) {
                            
                        } else {
                            break;
                        }
                        // item 26
                        inputStr+=stack.pop()
                    }
                    // item 27
                    stask.push(symbol)
                } else {
                    // item 160003
                    if (_sw160000_ == "(") {
                        // item 31
                        stack.push(symbol)
                    } else {
                        // item 160004
                        if (_sw160000_ == ")") {
                            
                        } else {
                            // item 160005
                            throw new IllegalStateException("Not expected:  " + _sw160000_);
                        }
                        while (true) {
                            // item 45
                            if (stack.size!=null
&&
stack.head!=")") {
                                
                            } else {
                                break;
                            }
                            // item 34
                            inputStr+=stack.pop()
                        }
                        // item 35
                        if (stack.head==")") {
                            
                        } else {
                            // item 38
                            stack.pop()
                        }
                    }
                }
            }
        }
    }
}
